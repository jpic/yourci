Requirements document for first feature freeze
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This document presents the requirements for this package. It should not
describe any design specification, which are documented in a separate document.

Introduction
============

Systems like strider-cd, go.cd and jenkins enable pipelining software
release and packaging. However, it happens that people complain that they
wouldn't expect to have to baby-sit a CI system. This software is part of a
research in day-to-day private PaaS testing. Technical debt is most part of
nowadays software maintainance so the less tool we rely on to test our product
then the more we can provide on our actual products.

> One of my most productive days was throwing away 1000 lines of code.
â€” Ken Thompson

This system should provide a testing bot that manipulates github statuses and
rerun failed builds that have logged a network error a few times. This should
stimulate automatic activity on pull requests. The bot should be able to scale
horizontally but should not require any vertical logic, nor supports of any
deployment workflow which belong to CD tools should as go.cd. It should
maintain a small footprint on the system because testing is unfortunately
physically limited, when not by hardware then by network, and we'll literally
take computers we find of the streets to test more pull request / os version /
dependency tree combinations.

Python 3
========

Because it makes you a better programer to do Python 3.

Requirements
============

The commands provided by this package should be github API consumer and local
user with executable rights. This package should not require any persistent
data to run, as data which is persisted in github is what this bot should take
care of. Github's API is used to list repositories, commits on open pull
requests, statuses for each automated job - called a "context" in github" - on
that commit.

There should be a command to clean commit statuses:

- pending statuses should have a queued or running job,
- statuses for deprecated jobs should be green,
- commits without statuses should have a queued or running job.

Each status should have a direct link to the job log.

Jobs
====

A job is linked to a commit status by its context name. It has:

- a process id, which command is generated by a file in the repository,
- a local and url path to logs for stdout and stderr for the job's process,
- a context name, which matches a commit status in github.

Github
======

Commands provided by this package focuses on open pull requests. Each open pull
request may have 0 to N statuses. Each status has:

- a commit sha and url,
- a context, which is an arbitrary string, ie. job0, jobN,
- a state, either "pending", "failure" or succes.

Note that each job should have a pending status on github by default.

HTTP Server
===========

While this package should provide a command to have a working http server for
local usage, it is optional and nginx should be useable instead to serve build
logs.
